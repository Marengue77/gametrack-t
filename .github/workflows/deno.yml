# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Deno

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31  # v1.1.2
        with:
          deno-version: v1.x

      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      # - name: Verify formatting
      #   run: deno fmt --check

      - name: Run linter
        run: deno lint

      - name: Run tests
        run: deno test -A
                    - nome: Configurar ambiente Node.js
  usos: ações/setup-node@v4.1.0
  com:
    # Defina always-auth em npmrc.
    always-auth: # opcional, o padrão é falso
    # Versão Especificação da versão a ser usada. Exemplos: 12.x, 10.15.1, >=10.15.0.
    node-version: # opcional
    # Arquivo contendo a versão Spec da versão a ser usada. Exemplos: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # opcional
    # Arquitetura de destino para o Node usar. Exemplos: x86, x64. Usará a arquitetura do sistema por padrão.
    arquitetura: # opcional
    # Defina esta opção se quiser que a ação verifique a versão mais recente disponível que satisfaça a especificação da versão.
    check-latest: # opcional
    # Registro opcional para configurar para auth. Definirá o registro em um arquivo .npmrc e .yarnrc de nível de projeto e configurará auth para ler de env.NODE_AUTH_TOKEN.
    registro-url: # opcional
    # Escopo opcional para autenticação em registros com escopo. Retornará ao proprietário do repositório ao usar o registro GitHub Packages (https://npm.pkg.github.com/).
    escopo: # opcional
    # Usado para puxar distribuições de nó de node-versions. Como há um padrão, isso normalmente não é fornecido pelo usuário. Ao executar esta ação em github.com, o valor padrão é suficiente. Ao executar em GHES, você pode passar um token de acesso pessoal para github.com se estiver enfrentando limitação de taxa.
    token: # opcional, o padrão é ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Usado para especificar um gerenciador de pacotes para cache no diretório padrão. Valores suportados: npm, yarn, pnpm.
    cache: # opcional
    # Usado para especificar o caminho para um arquivo de dependência: package-lock.json, yarn.lock, etc. Suporta curingas ou uma lista de nomes de arquivo para armazenar em cache múltiplas dependências.
    cache-dependency-path: # opcional
